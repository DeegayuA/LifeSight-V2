"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/app/page",{

/***/ "(app-pages-browser)/./lib/gemini.ts":
/*!***********************!*\
  !*** ./lib/gemini.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGeminiResponse: () => (/* binding */ getGeminiResponse)\n/* harmony export */ });\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/generative-ai */ \"(app-pages-browser)/./node_modules/@google/generative-ai/dist/index.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./lib/constants.ts\");\n\n\nasync function getGeminiResponse(input, imageBase64) {\n    try {\n        const apiKey = \"AIzaSyCjLMlEx2Aaw5j-NJYWz3K4Z_kvvh6irEY\";\n        console.log(\"API Key:\", apiKey);\n        if (!apiKey) {\n            throw new Error('Google Cloud API key is not configured');\n        }\n        const genAI = new _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenerativeAI(apiKey);\n        const model = genAI.getGenerativeModel({\n            model: \"gemini-1.5-flash\"\n        });\n        let prompt = _constants__WEBPACK_IMPORTED_MODULE_1__.GEMINI_PROMPT.replace('{input}', input);\n        const parts = [\n            {\n                text: prompt\n            }\n        ];\n        if (imageBase64) {\n            // If the imageBase64 is required to be part of the request, you can either pass it as a string\n            // or make use of the API's supported format (e.g., URL or external media).\n            // Here, we assume the image might need to be sent separately or as a base64 string.\n            parts.push({\n                text: \"Image: [data:image/jpeg;base64,\".concat(imageBase64, \"]\")\n            });\n        }\n        // The contents should include a role, which can typically be 'user' or 'system'\n        const result = await model.generateContent({\n            contents: [\n                {\n                    role: 'user',\n                    parts: parts\n                }\n            ]\n        });\n        const response = result.response;\n        if (!response.text()) {\n            throw new Error('No text response from Gemini API');\n        }\n        return {\n            text: response.text()\n        };\n    } catch (error) {\n        console.error('Error calling Gemini API:', error);\n        return {\n            text: '',\n            error: 'Failed to get response from AI. Please try again.'\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9nZW1pbmkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQ2Y7QUFPckMsZUFBZUUsa0JBQ3BCQyxLQUFhLEVBQ2JDLFdBQW9CO0lBRXBCLElBQUk7UUFDRixNQUFNQyxTQUFTQyx5Q0FBMkM7UUFDMURHLFFBQVFDLEdBQUcsQ0FBQyxZQUFZTDtRQUV4QixJQUFJLENBQUNBLFFBQVE7WUFDWCxNQUFNLElBQUlNLE1BQU07UUFDbEI7UUFFQSxNQUFNQyxRQUFRLElBQUlaLHFFQUFrQkEsQ0FBQ0s7UUFDckMsTUFBTVEsUUFBUUQsTUFBTUUsa0JBQWtCLENBQUM7WUFBRUQsT0FBTztRQUFtQjtRQUVuRSxJQUFJRSxTQUFTZCxxREFBYUEsQ0FBQ2UsT0FBTyxDQUFDLFdBQVdiO1FBRTlDLE1BQU1jLFFBQWlDO1lBQUM7Z0JBQUVDLE1BQU1IO1lBQU87U0FBRTtRQUV6RCxJQUFJWCxhQUFhO1lBQ2YsK0ZBQStGO1lBQy9GLDJFQUEyRTtZQUMzRSxvRkFBb0Y7WUFDcEZhLE1BQU1FLElBQUksQ0FBQztnQkFDVEQsTUFBTSxrQ0FBOEMsT0FBWmQsYUFBWTtZQUN0RDtRQUNGO1FBRUEsZ0ZBQWdGO1FBQ2hGLE1BQU1nQixTQUFTLE1BQU1QLE1BQU1RLGVBQWUsQ0FBQztZQUN6Q0MsVUFBVTtnQkFDUjtvQkFDRUMsTUFBTTtvQkFDTk4sT0FBT0E7Z0JBQ1Q7YUFDRDtRQUNIO1FBRUEsTUFBTU8sV0FBV0osT0FBT0ksUUFBUTtRQUNoQyxJQUFJLENBQUNBLFNBQVNOLElBQUksSUFBSTtZQUNwQixNQUFNLElBQUlQLE1BQU07UUFDbEI7UUFFQSxPQUFPO1lBQ0xPLE1BQU1NLFNBQVNOLElBQUk7UUFDckI7SUFDRixFQUFFLE9BQU9PLE9BQU87UUFDZGhCLFFBQVFnQixLQUFLLENBQUMsNkJBQTZCQTtRQUMzQyxPQUFPO1lBQ0xQLE1BQU07WUFDTk8sT0FBTztRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2RlZWdoYXl1YWRoaWthcmkvRG9jdW1lbnRzL0xpZmVTaWdodC9saWIvZ2VtaW5pLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdvb2dsZUdlbmVyYXRpdmVBSSB9IGZyb20gJ0Bnb29nbGUvZ2VuZXJhdGl2ZS1haSc7XG5pbXBvcnQgeyBHRU1JTklfUFJPTVBUIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5pbnRlcmZhY2UgR2VtaW5pUmVzcG9uc2Uge1xuICB0ZXh0OiBzdHJpbmc7XG4gIGVycm9yPzogc3RyaW5nO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0R2VtaW5pUmVzcG9uc2UoXG4gIGlucHV0OiBzdHJpbmcsXG4gIGltYWdlQmFzZTY0Pzogc3RyaW5nLFxuKTogUHJvbWlzZTxHZW1pbmlSZXNwb25zZT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1ZJVEVfR0VNSU5JX0FQSV9LRVk7XG4gICAgY29uc29sZS5sb2coXCJBUEkgS2V5OlwiLCBhcGlLZXkpO1xuXG4gICAgaWYgKCFhcGlLZXkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignR29vZ2xlIENsb3VkIEFQSSBrZXkgaXMgbm90IGNvbmZpZ3VyZWQnKTtcbiAgICB9XG5cbiAgICBjb25zdCBnZW5BSSA9IG5ldyBHb29nbGVHZW5lcmF0aXZlQUkoYXBpS2V5KTtcbiAgICBjb25zdCBtb2RlbCA9IGdlbkFJLmdldEdlbmVyYXRpdmVNb2RlbCh7IG1vZGVsOiBcImdlbWluaS0xLjUtZmxhc2hcIiB9KTtcblxuICAgIGxldCBwcm9tcHQgPSBHRU1JTklfUFJPTVBULnJlcGxhY2UoJ3tpbnB1dH0nLCBpbnB1dCk7XG5cbiAgICBjb25zdCBwYXJ0czogQXJyYXk8eyB0ZXh0OiBzdHJpbmcgfT4gPSBbeyB0ZXh0OiBwcm9tcHQgfV07XG5cbiAgICBpZiAoaW1hZ2VCYXNlNjQpIHtcbiAgICAgIC8vIElmIHRoZSBpbWFnZUJhc2U2NCBpcyByZXF1aXJlZCB0byBiZSBwYXJ0IG9mIHRoZSByZXF1ZXN0LCB5b3UgY2FuIGVpdGhlciBwYXNzIGl0IGFzIGEgc3RyaW5nXG4gICAgICAvLyBvciBtYWtlIHVzZSBvZiB0aGUgQVBJJ3Mgc3VwcG9ydGVkIGZvcm1hdCAoZS5nLiwgVVJMIG9yIGV4dGVybmFsIG1lZGlhKS5cbiAgICAgIC8vIEhlcmUsIHdlIGFzc3VtZSB0aGUgaW1hZ2UgbWlnaHQgbmVlZCB0byBiZSBzZW50IHNlcGFyYXRlbHkgb3IgYXMgYSBiYXNlNjQgc3RyaW5nLlxuICAgICAgcGFydHMucHVzaCh7XG4gICAgICAgIHRleHQ6IGBJbWFnZTogW2RhdGE6aW1hZ2UvanBlZztiYXNlNjQsJHtpbWFnZUJhc2U2NH1dYCwgLy8gRXhhbXBsZSBvZiBob3cgdG8gaW5jbHVkZSBiYXNlNjQgaW1hZ2UgYXMgdGV4dC5cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFRoZSBjb250ZW50cyBzaG91bGQgaW5jbHVkZSBhIHJvbGUsIHdoaWNoIGNhbiB0eXBpY2FsbHkgYmUgJ3VzZXInIG9yICdzeXN0ZW0nXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgbW9kZWwuZ2VuZXJhdGVDb250ZW50KHtcbiAgICAgIGNvbnRlbnRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICByb2xlOiAndXNlcicsICAvLyBZb3UgY2FuIHNldCB0aGUgcm9sZSBhcyAndXNlcicgb3IgJ3N5c3RlbScgYmFzZWQgb24geW91ciB1c2UgY2FzZVxuICAgICAgICAgIHBhcnRzOiBwYXJ0cyxcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICB9KTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gcmVzdWx0LnJlc3BvbnNlO1xuICAgIGlmICghcmVzcG9uc2UudGV4dCgpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHRleHQgcmVzcG9uc2UgZnJvbSBHZW1pbmkgQVBJJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRleHQ6IHJlc3BvbnNlLnRleHQoKVxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY2FsbGluZyBHZW1pbmkgQVBJOicsIGVycm9yKTtcbiAgICByZXR1cm4ge1xuICAgICAgdGV4dDogJycsXG4gICAgICBlcnJvcjogJ0ZhaWxlZCB0byBnZXQgcmVzcG9uc2UgZnJvbSBBSS4gUGxlYXNlIHRyeSBhZ2Fpbi4nXG4gICAgfTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkdvb2dsZUdlbmVyYXRpdmVBSSIsIkdFTUlOSV9QUk9NUFQiLCJnZXRHZW1pbmlSZXNwb25zZSIsImlucHV0IiwiaW1hZ2VCYXNlNjQiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfVklURV9HRU1JTklfQVBJX0tFWSIsImNvbnNvbGUiLCJsb2ciLCJFcnJvciIsImdlbkFJIiwibW9kZWwiLCJnZXRHZW5lcmF0aXZlTW9kZWwiLCJwcm9tcHQiLCJyZXBsYWNlIiwicGFydHMiLCJ0ZXh0IiwicHVzaCIsInJlc3VsdCIsImdlbmVyYXRlQ29udGVudCIsImNvbnRlbnRzIiwicm9sZSIsInJlc3BvbnNlIiwiZXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/gemini.ts\n"));

/***/ })

});